{"ast":null,"code":"var _jsxFileName = \"/Users/maorisrael/Desktop/singit-eyal/src/components/js/table.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useWindowDimensions from \"../../helpers/screenDimentions\";\nimport \"../css/table.css\";\nimport { AssigmentsBadge } from \"./avgGradePerAssigment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeadersTable = _ref => {\n  _s();\n\n  let {\n    data,\n    colums\n  } = _ref;\n  const [dataInfo, setDataInfo] = useState([]);\n  const {\n    width\n  } = useWindowDimensions();\n  useEffect(() => {\n    setDataInfo(data);\n  }, [data]);\n\n  const onFinish = text => {\n    const filteredData = dataInfo.filter(item => item.school.includes(text.target.value));\n\n    if (text.target.value !== \"\") {\n      setDataInfo(filteredData);\n    } else {\n      setDataInfo(data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-component-wrraper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: onFinish,\n        id: \"search-input\",\n        placeholder: \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9 \\u05DC\\u05E4\\u05D9 \\u05D1\\u05D9\\u05EA \\u05E1\\u05E4\\u05E8 \\u05D0\\u05D5 \\u05E2\\u05D9\\u05E8\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: () => {\n          let id = document.getElementById(\"search-input\");\n          id.value = null;\n          setDataInfo(data);\n        },\n        children: \"\\u05E0\\u05E7\\u05D4 \\u05D7\\u05D9\\u05E4\\u05D5\\u05E9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"participating-classes-table-header\",\n        children: \":\\u05DB\\u05DC \\u05D1\\u05EA\\u05D9 \\u05D4\\u05E1\\u05E4\\u05E8 \\u05D4\\u05DE\\u05E9\\u05EA\\u05EA\\u05E4\\u05D9\\u05DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        id: \"table-head\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: colums.map((column, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dataInfo.map((row, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [width > 900 ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.avgGradePerAssignment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  let newRow = dataInfo[index] = {\n                    overallAvgGrade: /*#__PURE__*/_jsxDEV(AssigmentsBadge, {\n                      assigment: dataInfo[index].overallAvgGrade[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 29\n                    }, this),\n                    howManyStudents: /*#__PURE__*/_jsxDEV(AssigmentsBadge, {\n                      assigment: dataInfo[index].overallAvgGrade[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 29\n                    }, this),\n                    grade: /*#__PURE__*/_jsxDEV(AssigmentsBadge, {\n                      assigment: dataInfo[index].overallAvgGrade[2]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 29\n                    }, this),\n                    school: /*#__PURE__*/_jsxDEV(AssigmentsBadge, {\n                      assigment: dataInfo[index].overallAvgGrade[3]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 29\n                    }, this),\n                    index: /*#__PURE__*/_jsxDEV(AssigmentsBadge, {\n                      assigment: dataInfo[index].overallAvgGrade[4]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 29\n                    }, this)\n                  };\n                  let newData = dataInfo;\n                  newData[index] = newRow;\n                  setDataInfo(newData);\n                },\n                children: \"click\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.overallAvgGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.howManyStudents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.grade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.school\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LeadersTable, \"QNFZlizBpqQbZILXoC5ZGQEG3Ao=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = LeadersTable;\nexport default LeadersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeadersTable\");","map":{"version":3,"sources":["/Users/maorisrael/Desktop/singit-eyal/src/components/js/table.jsx"],"names":["useEffect","useState","useWindowDimensions","AssigmentsBadge","LeadersTable","data","colums","dataInfo","setDataInfo","width","onFinish","text","filteredData","filter","item","school","includes","target","value","id","document","getElementById","map","column","index","row","avgGradePerAssignment","newRow","overallAvgGrade","howManyStudents","grade","newData"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useWindowDimensions from \"../../helpers/screenDimentions\";\nimport \"../css/table.css\";\nimport { AssigmentsBadge } from \"./avgGradePerAssigment\";\n\nconst LeadersTable = ({ data, colums }) => {\n  const [dataInfo, setDataInfo] = useState([]);\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    setDataInfo(data);\n  }, [data]);\n\n  const onFinish = (text) => {\n    const filteredData = dataInfo.filter((item) =>\n      item.school.includes(text.target.value)\n    );\n    if (text.target.value !== \"\") {\n      setDataInfo(filteredData);\n    } else {\n      setDataInfo(data);\n    }\n  };\n\n  return (\n    <div className=\"table-component-wrraper\">\n      <div id=\"search-wrapper\">\n        <input\n          onBlur={onFinish}\n          id=\"search-input\"\n          placeholder=\"חיפוש לפי בית ספר או עיר\"\n          type={\"text\"}\n        />\n        <button\n          className=\"search-button\"\n          onClick={() => {\n            let id = document.getElementById(\"search-input\");\n            id.value = null;\n            setDataInfo(data);\n          }}\n        >\n          נקה חיפוש\n        </button>\n        <h3 className=\"participating-classes-table-header\">\n          :כל בתי הספר המשתתפים\n        </h3>\n      </div>\n\n      <table id=\"table\">\n        <thead id=\"table-head\">\n          <tr>\n            {colums.map((column, index) => (\n              <td key={index}>{column}</td>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {dataInfo.map((row, index) => {\n            return (\n              <tr key={index}>\n                {width > 900 ? (\n                  <td>{row.avgGradePerAssignment}</td>\n                ) : (\n                  <td>\n                    <button\n                      onClick={() => {\n                        let newRow = (dataInfo[index] = {\n                          overallAvgGrade: (\n                            <AssigmentsBadge\n                              assigment={dataInfo[index].overallAvgGrade[0]}\n                            />\n                          ),\n                          howManyStudents: (\n                            <AssigmentsBadge\n                              assigment={dataInfo[index].overallAvgGrade[1]}\n                            />\n                          ),\n                          grade: (\n                            <AssigmentsBadge\n                              assigment={dataInfo[index].overallAvgGrade[2]}\n                            />\n                          ),\n                          school: (\n                            <AssigmentsBadge\n                              assigment={dataInfo[index].overallAvgGrade[3]}\n                            />\n                          ),\n                          index: (\n                            <AssigmentsBadge\n                              assigment={dataInfo[index].overallAvgGrade[4]}\n                            />\n                          ),\n                        });\n                        let newData = dataInfo;\n                        newData[index] = newRow;\n                        setDataInfo(newData);\n                      }}\n                    >\n                      click\n                    </button>\n                  </td>\n                )}\n                <td>{row.overallAvgGrade}</td>\n                <td>{row.howManyStudents}</td>\n                <td>{row.grade}</td>\n                <td>{row.school}</td>\n                <td>{index}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LeadersTable;\n"]},"metadata":{},"sourceType":"module"}